#pragma once

//////////////////////////////////////////////////////////////////////////
/// Includes
//////////////////////////////////////////////////////////////////////////

#include <OrangeAudioEngineDefs.h>


//////////////////////////////////////////////////////////////////////////
/// COAEAudioSourceManager
//////////////////////////////////////////////////////////////////////////

// maintains all instances of audio sources
class COAESourceManager
{
public:

    //////////////////////////////////////////////////////////////////////////

    COAESourceManager();
    ~COAESourceManager();

    //////////////////////////////////////////////////////////////////////////

    OASourceId  AddFileSource( const std::string& aFileName, bool anIsStreaming = false );
	OASourceId	AddProceduralSource( EProceduralSource aProceduralSource );

    OASourcePtr GetSource( const OASourceId& aSourceId );

    //////////////////////////////////////////////////////////////////////////

    bool        IsValid( const OASourceId& aSourceId ) const;


private:   

    //////////////////////////////////////////////////////////////////////////

    typedef std::unordered_map<OASourceId, OASourcePtr> OAESourceMap;

    //////////////////////////////////////////////////////////////////////////

    OASourcePtr CreateWavFileSource( const std::string& aFileName, bool anIsStreaming );

    //////////////////////////////////////////////////////////////////////////

    OAESourceMap                m_sources;
    OASourceId                  m_nextSourceId;
};

//////////////////////////////////////////////////////////////////////////
