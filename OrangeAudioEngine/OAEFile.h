#pragma once

//////////////////////////////////////////////////////////////////////////
/// Includes
//////////////////////////////////////////////////////////////////////////

#include <OrangeAudioEngineDefs.h>
#include <OAESource.h>


//////////////////////////////////////////////////////////////////////////
/// COAEAudioFile
//////////////////////////////////////////////////////////////////////////

// abstract base class for all audio file types
class IOAEFile : public IOAESource
{
public:

    //////////////////////////////////////////////////////////////////////////

    IOAEFile( const OAUInt64& anId );
    virtual ~IOAEFile();

    //////////////////////////////////////////////////////////////////////////

    virtual bool          Load( const std::string& aFilePath ) = 0;

    //////////////////////////////////////////////////////////////////////////

    const XAUDIO2_BUFFER* GetAudioBuffer() const;
    const OAUInt8*        GetAudioData() const;


protected:

    //////////////////////////////////////////////////////////////////////////

	std::fstream	m_fileStream;
    XAUDIO2_BUFFER  m_xaudioBuffer;
    OAUInt8*        m_dataBuffer;
};

//////////////////////////////////////////////////////////////////////////