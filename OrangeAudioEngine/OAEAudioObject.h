#pragma once

//////////////////////////////////////////////////////////////////////////
/// Includes
//////////////////////////////////////////////////////////////////////////

#include <OrangeAudioEngineDefs.h>


//////////////////////////////////////////////////////////////////////////
/// Forward Declarations
//////////////////////////////////////////////////////////////////////////

class COAESoundInstance;


//////////////////////////////////////////////////////////////////////////
/// COAEAudioObject
//////////////////////////////////////////////////////////////////////////

// COAEAudioObject is used to play sounds on the mastering voice. each object
// maintains a list of COAESound instaces, which are used to feed audio buffers
// to source voice
class COAEAudioObject
{
public:

    //////////////////////////////////////////////////////////////////////////

    COAEAudioObject( OAInt64 anId );
    ~COAEAudioObject();

	//////////////////////////////////////////////////////////////////////////

	OAInt32 PlaySound( const std::string& anAudioFile, IXAudio2& anAudioInterface );


private:

    //////////////////////////////////////////////////////////////////////////

    typedef std::shared_ptr<COAESoundInstance> OAESoundPtr;

    //////////////////////////////////////////////////////////////////////////

    OAInt64                     m_id;
    IXAudio2SourceVoice*        m_voice;
    std::vector<OAESoundPtr>    m_activeSounds;
};

//////////////////////////////////////////////////////////////////////////
